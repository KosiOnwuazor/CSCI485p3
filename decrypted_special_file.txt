#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <curl/curl.h>

// Callback function to write data received from the server
static size_t write_callback(void *ptr, size_t size, size_t nmemb, void *stream) {
    (void)stream;
    return fwrite(ptr, size, nmemb, stdout);
}

int main() {
    CURL *curl;
    CURLcode res;

    const char *url = "http://example.com/upload"; // Replace with your server's URL
    const char *file_path = "decrypted_special_file.txt";

    FILE *file = fopen(file_path, "rb");
    if (!file) {
        fprintf(stderr, "Error opening file\n");
        return 1;
    }

    // Initialize libcurl
    curl_global_init(CURL_GLOBAL_ALL);
    curl = curl_easy_init();
    if (!curl) {
        fprintf(stderr, "Error initializing libcurl\n");
        fclose(file);
        return 1;
    }

    // Set URL to send the HTTP POST request to
    curl_easy_setopt(curl, CURLOPT_URL, url);

    // Set POST data (file contents)
    curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
    curl_easy_setopt(curl, CURLOPT_READDATA, file);

    // Set callback function to handle response
    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);

    // Perform the HTTP POST request
    res = curl_easy_perform(curl);
    if (res != CURLE_OK) {
        fprintf(stderr, "curl_easy_perform() failed: %s\n", curl_easy_strerror(res));
    }

    // Cleanup
    curl_easy_cleanup(curl);
    curl_global_cleanup();
    fclose(file);

    return 0;
}
